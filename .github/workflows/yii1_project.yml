name: Yii2 Build and Test

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0 # Escolha a versão do MySQL que você precisa
        env:
          MYSQL_ROOT_PASSWORD: '' # Defina sua senha root aqui (ou use secrets)
          MYSQL_DATABASE: yii2basic # Opcional: define o banco de dados inicial
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, mysql, mbstring, xml, ctype, tokenizer, intl, gd
          coverage: xdebug

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Copy .env.example to .env
        run: cp .env.example .env

      # - name: Grant execute permissions to yii
      #   run: chmod +x yii

      # - name: Generate Application Key
      #   run: ./yii key

      - name: Create Test Database
        run: mysql -h 127.0.0.1 -u root -e "CREATE DATABASE IF NOT EXISTS yii2basic;"

      - name: Apply Migrations
        run: ./yii migrate --interactive=0 --env=test

      - name: Run Unit Tests
        run: vendor/bin/codecept run unit --coverage-html

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: tests/_output/coverage/